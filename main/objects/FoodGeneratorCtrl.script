local TIMER_MIN = 2
local TIMER_MAX = 5
function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	self.generateTimer = nil
	newTimer(self)
end

function newTimer(self)
	rnd.seed()
	self.generateTimer = rnd.double_range(TIMER_MIN, TIMER_MAX)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function generateFood(self)
	local pos = go.get_position()
	local food = factory.create('#factory', pos)
	go.set_scale(vmath.vector3(0.75,0.75,1), food)
end

function update(self, dt)
	if self.generateTimer > 0 then 
		self.generateTimer = self.generateTimer - dt
	else
		newTimer(self)
		generateFood(self)
	end
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
